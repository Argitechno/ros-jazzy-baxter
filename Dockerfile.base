################################################################
# Dockerfile for Baxter ROS1 legacy bridge + ROS2 Jazzy interface
################################################################

# 1) Base image
FROM osrf/ros:jazzy-desktop-full

# 2) Install essential system utilities (NOT handled by rosdep)
RUN apt update && apt install -y \
        python3-pip \
        python3-rosdep \
        lsb-release \
        python3-netifaces \
        wget \
    && rosdep update \
    && rm -rf /var/lib/apt/lists/*    

# 4) Install ROS1 Baxter .deb package


WORKDIR /tmp
# Build and install SDFormat 14 from source
RUN git clone https://github.com/gazebosim/sdformat -b sdf14 \
    && wget -qO - https://packages.osrfoundation.org/gazebo.key | sudo apt-key add - \
    && sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list' \
    && apt update && apt install -y \
        libignition-cmake3-dev \
        libignition-math7-dev \
        libignition-utils2-dev \
        libignition-utils2-cli-dev \
    && rm -rf /var/lib/apt/lists/*    
WORKDIR /tmp/sdformat
RUN mkdir build && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && rm -rf /tmp/sdformat

WORKDIR /tmp

# 5) Clone Baxter ROS1 source + install deps
RUN wget -O ros-baxter_1.3.1.deb "https://box.ec-nantes.fr/index.php/s/s7rbFwAeTqwoe6e/download?path=%2F&files=ros-baxter%5Bnoble%5D_1.3.1.deb"

RUN dpkg -i ros-baxter_1.3.1.deb || true && \
    apt-get update && \
    apt-get install -y -f && \
    rm ros-baxter_1.3.1.deb

# 7) Clone ROS2 baxter packages
WORKDIR /tmp/baxter_ws/src
RUN git clone https://github.com/CentraleNantesRobotics/baxter_common_ros2.git

# 8) Install ROS2 package dependencies via rosdep
WORKDIR /tmp/baxter_ws
RUN /bin/bash -c "\
    source /opt/ros/jazzy/setup.bash && \
    rosdep install --from-paths src --ignore-src -r -y"

# 9) Build all except baxter_bridge
RUN /bin/bash -c "\
    source /opt/ros/jazzy/setup.bash && \
    colcon build --merge-install --install-base /opt/ros/jazzy \
        --packages-skip baxter_bridge"

# 10) Build baxter_bridge (ROS1/ROS2 hybrid)
ENV ROS1_INSTALL_PATH=/opt/ros/obese
ENV ROS2_INSTALL_PATH=/opt/ros/jazzy
#trick it to use the right glog because obese only has log4cxx and not glog, 
# but their CMakeLists has it use glog if you are on jazzy?


#Fake the glog 
RUN ln -s /opt/ros/obese/lib/librosconsole_log4cxx.so /opt/ros/obese/lib/librosconsole_glog.so
RUN /bin/bash -c "\
    source ${ROS1_INSTALL_PATH}/setup.bash && \
    source ${ROS2_INSTALL_PATH}/setup.bash && \
    colcon build --merge-install --install-base /opt/ros/jazzy --packages-select baxter_bridge --cmake-force-configure --cmake-args -DROSCONSOLE_LOG=rosconsole_log4cxx"

#Fake rosversion so roscore works. (Rosversion not included in the obese deb?)
RUN /bin/bash -c "\
    echo -e '#!/bin/bash\necho "1.15.14"' > /opt/ros/obese/bin/rosversion && \
    chmod +x /opt/ros/obese/bin/rosversion"

WORKDIR /tmp/ros1_extras_ws/src
#Turtle
RUN git clone -b noetic-devel https://github.com/ros/ros_tutorials.git
#Lib for vis stuff
RUN git clone -b noetic-devel https://github.com/ros-visualization/qt_gui_core.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/python_qt_binding.git && \
    git clone -b noetic-devel https://github.com/ros/nodelet_core.git && \
    git clone -b noetic-devel https://github.com/ros/bond_core.git && \
    git clone https://github.com/ros/roslint.git

#Visualization stuff.
RUN git clone -b noetic-devel https://github.com/ros-visualization/rqt.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/rqt_common_plugins.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/rqt_graph.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/rqt_console.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/rqt_plot.git && \
    git clone -b noetic-devel https://github.com/ros-visualization/rqt_reconfigure.git
    

RUN apt-get update && apt-get install -y libtinyxml-dev qtbase5-dev libboost-all-dev

WORKDIR /tmp/ros1_extras_ws
RUN /bin/bash -c "\
    source ${ROS1_INSTALL_PATH}/setup.bash && \
    catkin_make && \
    catkin_make install -DCMAKE_INSTALL_PREFIX=${ROS1_INSTALL_PATH}"

RUN /bin/bash -c "\
    source ${ROS2_INSTALL_PATH}/setup.bash && \
    apt install -y ros-$ROS_DISTRO-turtlesim ros-$ROS_DISTRO-rqt-graph"

ENV PYTHONPATH=/opt/ros/obese/lib/python3/dist-packages
ENV ROS_PACKAGE_PATH=/opt/ros/obese/share

# 12) Default command
#COPY custom_entrypoint.sh /entrypoint.sh
#RUN chmod +x /entrypoint.sh
#ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
